// shared/utils/webhooks.util.js
// –ü–µ—Ä–µ–≤—ñ—Ä —à–ª—è—Ö–∏ —ñ–º–ø–æ—Ä—Ç—ñ–≤ –ø—ñ–¥ —Å–≤—ñ–π –ø—Ä–æ—î–∫—Ç

const { wrike, WEBHOOK_SECRET, PUBLIC_BASE_URL } = require("../../../configurations/env.variables");
const { toPlainError } = require("./helpers.util");

// –í–ê–õ–Ü–î–ù–ò–ô —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Wrike: "[TaskCreated,CommentAdded]"
const WANT_EVENTS = ["TaskCreated", "CommentAdded"];
const EVENTS_STRING = `[${WANT_EVENTS.join(",")}]`;

/**
 * –†–µ–≥—ñ—Å—Ç—Ä—É—î –≤–µ–±—Ö—É–∫ –Ω–∞ baseUrl (–∞–±–æ –±–µ—Ä–µ PUBLIC_BASE_URL –∑ env).
 * –ü–æ—Ä–∞–¥–∞: –¥–ª—è Render –Ω–µ –∑–∞–ø—É—Å–∫–∞–π —Å–µ—Ä–≤–µ—Ä —É build-–∫–æ–º–∞–Ω–¥—ñ ‚Äî –∑—Ä–æ–±–∏ Start Command –æ–∫—Ä–µ–º–æ.
 */
async function ensureWebhookRegistered(baseUrlOverride) {
    const base = (baseUrlOverride || PUBLIC_BASE_URL || "").replace(/\/$/, "");
    if (!base) throw new Error("PUBLIC_BASE_URL –Ω–µ –∑–∞–¥–∞–Ω–æ (—ñ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ baseUrlOverride)");
    if (!WEBHOOK_SECRET) throw new Error("WEBHOOK_SECRET –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî Wrike –≤–µ—Ä—Ç–∞—î 400 –±–µ–∑ –≤–∞–ª—ñ–¥–Ω–æ–≥–æ secret");

    const hookUrl = `${base}/wrike/webhook`;

    // 1) –Ü–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å: –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —Å—Ç–∞—Ä–∏–π —Ö—É–∫ –∑ —Ç–∏–º —Å–∞–º–∏–º URL
    let list = [];
    try {
        const resp = await wrike.get("/webhooks");
        list = resp?.data?.data || [];
    } catch (e) {
        console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤–µ–±—Ö—É–∫—ñ–≤:", toPlainError(e));
    }
    const existing = list.find(w => w.hookUrl === hookUrl);
    if (existing?.id) {
        try {
            await wrike.delete(`/webhooks/${encodeURIComponent(existing.id)}`);
            console.log(`‚ÑπÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≤–µ–±—Ö—É–∫: ${existing.id}`);
        } catch (e) {
            console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –≤–µ–±—Ö—É–∫:", toPlainError(e));
        }
    }

    // 2) –Ñ–î–ò–ù–ò–ô –∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Å–ø–æ—Å—ñ–±: form-urlencoded —ñ–∑ –†–Ø–î–ö–û–ú —É –ø–æ–ª—ñ "events"
    //    –í–ê–ñ–õ–ò–í–û: –Ω–µ .append("events", ...), –Ω–µ JSON-–º–∞—Å–∏–≤ ‚Äî —Ç—ñ–ª—å–∫–∏ —Ä—è–¥–æ–∫ "[A,B]"
    const body = new URLSearchParams();
    body.set("hookUrl", hookUrl);
    body.set("secret", WEBHOOK_SECRET);
    body.set("events", EVENTS_STRING); // ‚Üê –∫–ª—é—á–æ–≤–∏–π –º–æ–º–µ–Ω—Ç

    try {
        const { data } = await wrike.post("/webhooks", body.toString(), {
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
        });

        const created = data?.data?.[0];
        if (!created?.id) throw new Error("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞ –≤—ñ–¥–±—É–ª–æ—Å—è –±–µ–∑ ID —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ");
        console.log("‚úÖ –í–µ–±—Ö—É–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ:", created.id);
        return created;
    } catch (e) {
        // –ü—ñ–¥–∫–∞–∂–µ–º–æ, —è–∫—â–æ –∑–Ω–æ–≤ –ø–æ–¥–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç events
        const errText = toPlainError(e);
        console.warn("‚ö†Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞ –Ω–µ –≤–¥–∞–ª–æ—Å—è:", errText);
        if (/events/i.test(errText)) {
            console.warn(`üí° –ü–µ—Ä–µ–≤—ñ—Ä –∑–Ω–∞—á–µ–Ω–Ω—è 'events': –º–∞—î –±—É—Ç–∏ —Å–∞–º–µ ${EVENTS_STRING} —É form-urlencoded.`);
        }
        throw e;
    }
}

module.exports = { ensureWebhookRegistered };
